<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet xmlns:ut="https://github.com/xslet/2020/xslutil" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:strip-space elements="*"/><xsl:param name="ut:apos">'</xsl:param><xsl:param name="ut:quot">"</xsl:param><xsl:param name="ut:true" select="string(true())"/><xsl:param name="ut:unknown_namespace">&#x86;-&#x87;</xsl:param><xsl:template name="ut:get_xsl_url"><xsl:param name="pi" select="/processing-instruction('xml-stylesheet')"/><xsl:variable name="QUOT">"</xsl:variable><xsl:variable name="APOS">'</xsl:variable><xsl:variable name="s1" select="substring-after($pi, 'href')"/><xsl:if test="normalize-space(substring-before($s1, '=')) = ''"><xsl:variable name="s2" select="substring-after($s1, '=')"/><xsl:choose><xsl:when test="substring($s2, 1, 1) = $QUOT"><xsl:value-of select="translate(substring-before(substring-after($s2, $QUOT), $QUOT), '\', '/')"/></xsl:when><xsl:when test="substring($s2, 1, 1) = $APOS"><xsl:value-of select="translate(substring-before(substring-after($s2, $APOS), $APOS), '\', '/')"/></xsl:when><xsl:otherwise><xsl:variable name="s3" select="normalize-space($s2)"/><xsl:choose><xsl:when test="substring($s3, 1, 1) = $QUOT"><xsl:value-of select="translate(substring-before(substring-after($s2, $QUOT), $QUOT), '\', '/')"/></xsl:when><xsl:when test="substring($s3, 1, 1) = $APOS"><xsl:value-of select="translate(substring-before(substring-after($s2, $APOS), $APOS), '\', '/')"/></xsl:when></xsl:choose></xsl:otherwise></xsl:choose></xsl:if></xsl:template><xsl:template match="compute[@name='ut:get_xsl_url']"><xsl:call-template name="ut:get_xsl_url"><xsl:with-param name="pi"><xsl:value-of select="param[@name='pi']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:count"><xsl:param name="string"/><xsl:param name="target"/><xsl:choose><xsl:when test="string-length($string) = 0">0</xsl:when><xsl:when test="string-length($target) = 0">0</xsl:when><xsl:when test="starts-with($string, $target)"><xsl:variable name="_count"><xsl:variable name="_next_bgn" select="string-length($target) + 1"/><xsl:call-template name="ut:count"><xsl:with-param name="string" select="substring($string, $_next_bgn)"/><xsl:with-param name="target" select="$target"/></xsl:call-template></xsl:variable><xsl:value-of select="$_count + 1"/></xsl:when><xsl:otherwise><xsl:call-template name="ut:count"><xsl:with-param name="string" select="substring($string, 2)"/><xsl:with-param name="target" select="$target"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="compute[@name='ut:count']"><xsl:call-template name="ut:count"><xsl:with-param name="string"><xsl:value-of select="param[@name='string']"/></xsl:with-param><xsl:with-param name="target"><xsl:value-of select="param[@name='target']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:get_namespace_uri"><xsl:param name="prefix"/><xsl:variable name="_ns" select="namespace::*[name() = $prefix]"/><xsl:choose><xsl:when test="string-length($_ns) &gt; 0"><xsl:value-of select="$_ns"/></xsl:when><xsl:otherwise><xsl:variable name="_ns2" select="namespace-uri(//*[name() = concat($prefix,':',local-name())])"/><xsl:choose><xsl:when test="string-length($_ns2) &gt; 0"><xsl:value-of select="$_ns2"/></xsl:when><xsl:when test="string-length($prefix) &gt; 0"><xsl:value-of select="$ut:unknown_namespace"/></xsl:when></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="compute[@name='ut:get_namespace_uri']"><xsl:call-template name="ut:get_namespace_uri"><xsl:with-param name="prefix"><xsl:value-of select="param[@name='prefix']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:validate"><xsl:param name="string"/><xsl:param name="forbidden"/><xsl:param name="default"/><xsl:variable name="_s" select="translate($string, $forbidden, '')"/><xsl:choose><xsl:when test="string-length($_s) = string-length($string)"><xsl:value-of select="$string"/></xsl:when><xsl:otherwise><xsl:value-of select="$default"/></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="compute[@name='ut:validate']"><xsl:call-template name="ut:validate"><xsl:with-param name="string"><xsl:value-of select="param[@name='string']"/></xsl:with-param><xsl:with-param name="forbidden"><xsl:value-of select="param[@name='forbidden']"/></xsl:with-param><xsl:with-param name="default"><xsl:value-of select="param[@name='default']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:replace"><xsl:param name="string"/><xsl:param name="target"/><xsl:param name="replacement"/><xsl:variable name="_lenT" select="string-length($target)"/><xsl:choose><xsl:when test="$_lenT = 0"><xsl:value-of select="$string"/></xsl:when><xsl:when test="starts-with($string, $target)"><xsl:value-of select="$replacement"/><xsl:call-template name="ut:replace"><xsl:with-param name="string" select="substring($string, $_lenT + 1)"/><xsl:with-param name="target" select="$target"/><xsl:with-param name="replacement" select="$replacement"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:variable name="_before" select="substring-before($string, $target)"/><xsl:choose><xsl:when test="$_before = ''"><xsl:value-of select="$string"/></xsl:when><xsl:otherwise><xsl:variable name="_lenB" select="string-length($_before)"/><xsl:variable name="_posA" select="$_lenB + $_lenT + 1"/><xsl:value-of select="$_before"/><xsl:value-of select="$replacement"/><xsl:call-template name="ut:replace"><xsl:with-param name="string" select="substring($string, $_posA)"/><xsl:with-param name="target" select="$target"/><xsl:with-param name="replacement" select="$replacement"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="compute[@name='ut:replace']"><xsl:call-template name="ut:replace"><xsl:with-param name="string"><xsl:value-of select="param[@name='string']"/></xsl:with-param><xsl:with-param name="target"><xsl:value-of select="param[@name='target']"/></xsl:with-param><xsl:with-param name="replacement"><xsl:value-of select="param[@name='replacement']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:is_absolute_url"><xsl:param name="url"/><xsl:choose><xsl:when test="string-length($url) = 0"><xsl:value-of select="$ut:true"/></xsl:when><xsl:when test="contains($url, ':')"><xsl:value-of select="$ut:true"/></xsl:when><xsl:when test="starts-with($url, '/')"><xsl:value-of select="$ut:true"/></xsl:when></xsl:choose></xsl:template><xsl:template match="compute[@name='ut:is_absolute_url']"><xsl:call-template name="ut:is_absolute_url"><xsl:with-param name="url"><xsl:value-of select="param[@name='url']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:ends_with"><xsl:param name="string"/><xsl:param name="suffix"/><xsl:variable name="_len1" select="string-length($suffix)"/><xsl:choose><xsl:when test="$_len1 = 0"><xsl:value-of select="$ut:true"/></xsl:when><xsl:otherwise><xsl:variable name="_len0" select="string-length($string)"/><xsl:variable name="_len2" select="$_len0 - $_len1"/><xsl:variable name="_ends" select="substring($string, $_len2 + 1)"/><xsl:if test="$_ends = $suffix"><xsl:value-of select="$ut:true"/></xsl:if></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="compute[@name='ut:ends_with']"><xsl:call-template name="ut:ends_with"><xsl:with-param name="string"><xsl:value-of select="param[@name='string']"/></xsl:with-param><xsl:with-param name="suffix"><xsl:value-of select="param[@name='suffix']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:get_dir_from_url"><xsl:param name="url"/><xsl:choose><xsl:when test="not(contains($url, '/'))">.</xsl:when><xsl:otherwise><xsl:call-template name="ut:_get_dir_from_url_r"><xsl:with-param name="url" select="$url"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="compute[@name='ut:get_dir_from_url']"><xsl:call-template name="ut:get_dir_from_url"><xsl:with-param name="url"><xsl:value-of select="param[@name='url']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:_get_dir_from_url_r"><xsl:param name="url"/><xsl:value-of select="substring-before($url, '/')"/><xsl:variable name="suburl" select="substring-after($url, '/')"/><xsl:if test="string-length($suburl) &gt; 0"><xsl:variable name="subdir"><xsl:call-template name="ut:_get_dir_from_url_r"><xsl:with-param name="url" select="$suburl"/></xsl:call-template></xsl:variable><xsl:if test="string-length($subdir) &gt; 0"><xsl:value-of select="concat('/', $subdir)"/></xsl:if></xsl:if></xsl:template><xsl:template match="compute[@name='ut:_get_dir_from_url_r']"><xsl:call-template name="ut:_get_dir_from_url_r"><xsl:with-param name="url"><xsl:value-of select="param[@name='url']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:repeat"><xsl:param name="string"/><xsl:param name="count"/><xsl:if test="$count &gt; 0"><xsl:value-of select="$string"/><xsl:call-template name="ut:repeat"><xsl:with-param name="string" select="$string"/><xsl:with-param name="count" select="$count - 1"/></xsl:call-template></xsl:if></xsl:template><xsl:template match="compute[@name='ut:repeat']"><xsl:call-template name="ut:repeat"><xsl:with-param name="string"><xsl:value-of select="param[@name='string']"/></xsl:with-param><xsl:with-param name="count"><xsl:value-of select="param[@name='count']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:trim_start"><xsl:param name="string"/><xsl:param name="target"/><xsl:variable name="_lenS" select="string-length($string)"/><xsl:variable name="_lenT" select="string-length($target)"/><xsl:choose><xsl:when test="$_lenS = 0"/><xsl:when test="$_lenT = 0"><xsl:variable name="_first" select="substring($string, 1, 1)"/><xsl:choose><xsl:when test="normalize-space($_first) = ''"><xsl:call-template name="ut:trim_start"><xsl:with-param name="string" select="substring($string, 2)"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of select="$string"/></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="starts-with($string, $target)"><xsl:call-template name="ut:trim_start"><xsl:with-param name="string" select="substring($string, $_lenT + 1)"/><xsl:with-param name="target" select="$target"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of select="$string"/></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="compute[@name='ut:trim_start']"><xsl:call-template name="ut:trim_start"><xsl:with-param name="string"><xsl:value-of select="param[@name='string']"/></xsl:with-param><xsl:with-param name="target"><xsl:value-of select="param[@name='target']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:trim_end"><xsl:param name="string"/><xsl:param name="target"/><xsl:variable name="_lenS" select="string-length($string)"/><xsl:variable name="_lenT" select="string-length($target)"/><xsl:choose><xsl:when test="$_lenS = 0"/><xsl:when test="$_lenT = 0"><xsl:variable name="_last" select="substring($string, $_lenS, 1)"/><xsl:choose><xsl:when test="normalize-space($_last) = ''"><xsl:call-template name="ut:trim_end"><xsl:with-param name="string" select="substring($string, 1, $_lenS - 1)"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of select="$string"/></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="substring($string, $_lenS - $_lenT + 1) = $target"><xsl:call-template name="ut:trim_end"><xsl:with-param name="string" select="substring($string, 1, $_lenS - $_lenT)"/><xsl:with-param name="target" select="$target"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of select="$string"/></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="compute[@name='ut:trim_end']"><xsl:call-template name="ut:trim_end"><xsl:with-param name="string"><xsl:value-of select="param[@name='string']"/></xsl:with-param><xsl:with-param name="target"><xsl:value-of select="param[@name='target']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="ut:trim"><xsl:param name="string"/><xsl:param name="target"/><xsl:variable name="_str"><xsl:call-template name="ut:trim_start"><xsl:with-param name="string" select="$string"/><xsl:with-param name="target" select="$target"/></xsl:call-template></xsl:variable><xsl:call-template name="ut:trim_end"><xsl:with-param name="string" select="$_str"/><xsl:with-param name="target" select="$target"/></xsl:call-template></xsl:template><xsl:template match="compute[@name='ut:trim']"><xsl:call-template name="ut:trim"><xsl:with-param name="string"><xsl:value-of select="param[@name='string']"/></xsl:with-param><xsl:with-param name="target"><xsl:value-of select="param[@name='target']"/></xsl:with-param></xsl:call-template></xsl:template><xsl:template match="/*"><xsl:variable name="_data_url" select="@data-src"/><html><head><meta charset="utf-8"/><title><xsl:value-of select="@title"/></title><link rel="stylesheet" href="../res/test/unit-test.css"/><script src="../res/test/unit-test.js"/></head><body><div id="passFailBar"/><h1><xsl:value-of select="@title"/></h1><xsl:apply-templates select="describe|it"><xsl:with-param name="data_url" select="$_data_url"/></xsl:apply-templates></body></html></xsl:template><xsl:template match="describe"><xsl:param name="data_url"/><xsl:variable name="_data_url"><xsl:choose><xsl:when test="boolean(@data-src)"><xsl:value-of select="@data-src"/></xsl:when><xsl:otherwise><xsl:value-of select="$data_url"/></xsl:otherwise></xsl:choose></xsl:variable><section class="describe"><div class="title"><xsl:value-of select="@title"/></div><xsl:apply-templates select="describe|it"><xsl:with-param name="data_url" select="$_data_url"/></xsl:apply-templates></section></xsl:template><xsl:template match="it"><xsl:param name="data_url"/><xsl:variable name="_data_url"><xsl:choose><xsl:when test="boolean(@data-src)"><xsl:value-of select="@data-src"/></xsl:when><xsl:otherwise><xsl:value-of select="$data_url"/></xsl:otherwise></xsl:choose></xsl:variable><section><xsl:choose><xsl:when test="@skip='true'"><xsl:attribute name="class">it skip</xsl:attribute><div class="title"><xsl:value-of select="@title"/></div></xsl:when><xsl:otherwise><xsl:variable name="_computed"><xsl:apply-templates select="compute"><xsl:with-param name="data_url" select="$_data_url"/></xsl:apply-templates></xsl:variable><xsl:variable name="_expected"><xsl:apply-templates select="expect"/></xsl:variable><xsl:choose><xsl:when test="$_computed = $_expected"><xsl:attribute name="class">it pass</xsl:attribute><xsl:call-template name="it-content"><xsl:with-param name="expected" select="$_expected"/><xsl:with-param name="computed" select="$_computed"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:attribute name="class">it fail</xsl:attribute><xsl:call-template name="it-content"><xsl:with-param name="expected" select="$_expected"/><xsl:with-param name="computed" select="$_computed"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></section></xsl:template><xsl:template name="it-content"><xsl:param name="computed"/><xsl:param name="expected"/><div class="title"><xsl:value-of select="@title"/><a class="to-show" href="javascript:void(0)" onclick="showHideComparison(this);"/></div><div class="comparison hide"><div class="legends"><span class="expected">:Expected, </span><span class="computed">:Computed</span></div><div class="code expected"><xsl:value-of select="$expected"/></div><div class="code computed"><xsl:value-of select="$computed"/></div></div></xsl:template><xsl:template match="compute/param"/></xsl:stylesheet>